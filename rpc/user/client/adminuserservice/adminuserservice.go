// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: user.proto

package adminuserservice

import (
	"context"

	"bookstore/rpc/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserInfoReq  = user.GetUserInfoReq
	GetUserInfoResp = user.GetUserInfoResp
	UserInfo        = user.UserInfo
	UserListReq     = user.UserListReq
	UserListResp    = user.UserListResp

	AdminUserService interface {
		GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error)
		UserList(ctx context.Context, in *UserListReq, opts ...grpc.CallOption) (*UserListResp, error)
	}

	defaultAdminUserService struct {
		cli zrpc.Client
	}
)

func NewAdminUserService(cli zrpc.Client) AdminUserService {
	return &defaultAdminUserService{
		cli: cli,
	}
}

func (m *defaultAdminUserService) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	client := user.NewAdminUserServiceClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultAdminUserService) UserList(ctx context.Context, in *UserListReq, opts ...grpc.CallOption) (*UserListResp, error) {
	client := user.NewAdminUserServiceClient(m.cli.Conn())
	return client.UserList(ctx, in, opts...)
}
